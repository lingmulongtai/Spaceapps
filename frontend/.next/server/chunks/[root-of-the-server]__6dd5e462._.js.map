{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lingm/Downloads/Spaceapps%20photo/frontend/src/app/api/tiles/preview/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nconst BACKEND_BASE = process.env.NEXT_PUBLIC_BACKEND_URL ?? \"http://127.0.0.1:8000\";\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const response = await fetch(`${BACKEND_BASE}/tiles/preview`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      return NextResponse.json(\r\n        { status: \"error\", detail: text || response.statusText },\r\n        { status: response.status },\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return NextResponse.json(data, { status: response.status });\r\n  } catch (error) {\r\n    const message = error instanceof Error ? error.message : \"Unknown error\";\r\n    return NextResponse.json({ status: \"error\", detail: message }, { status: 502 });\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,uBAAuB,IAAI;AAErD,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,cAAc,CAAC,EAAE;YAC5D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,4JAAY,CAAC,IAAI,CACtB;gBAAE,QAAQ;gBAAS,QAAQ,QAAQ,SAAS,UAAU;YAAC,GACvD;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,4JAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ,SAAS,MAAM;QAAC;IAC3D,EAAE,OAAO,OAAO;QACd,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACzD,OAAO,4JAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;YAAS,QAAQ;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}